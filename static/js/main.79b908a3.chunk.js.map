{"version":3,"sources":["Artist.js","Tracks.js","Search.js","App.js","index.js"],"names":["Artist","artist","images","name","followers","genres","total","join","style","width","height","borderRadius","objectFit","src","url","alt","Tracks","state","playing","audio","playingPreviewUrl","playAudio","previewUrl","Audio","pause","setState","play","trackIcon","track","preview_url","tracks","this","props","map","id","album","onClick","className","Component","Search","artistQuery","updateArtistQuery","event","target","value","handelKeyPress","key","searchArtist","onChange","onKeyPress","placeholder","API_ADDRESS","App","fetch","then","response","json","artists","items","catch","error","alert","message","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.79b908a3.chunk.js","sourcesContent":["import React from 'react';\nconst Artist = ({artist}) =>{\n\n    if (!artist) return null;\n\n    const { images, name, followers, genres} = artist;\n\n    return(\n        <div>\n            <h3>{name}</h3>\n            <p>{followers.total} followers</p>\n            <p>{genres.join(', ')}</p>\n            <img\n             style= {\n                 {\n                     width:200,\n                     height:200,\n                     borderRadius:100,\n                     objectFit: 'cover'\n                 }\n             }\n             src={images[0] && images[0].url} alt=\"artist-img\" />\n        </div>\n    )\n}\n\n\nexport default Artist;","import React, {Component} from 'react';\n\nclass Tracks extends Component{\n\n    state= {playing: false, audio:null, playingPreviewUrl:null};\n\n    playAudio = previewUrl => () => {\n        const audio = new Audio(previewUrl);\n\n        if (!this.state.playing){\n            audio.play();\n            this.setState({playing:true, audio, playingPreviewUrl:previewUrl});\n        } else{\n            this.state.audio.pause();\n\n            if(this.state.playingPreviewUrl === previewUrl){\n                 this.setState({playing:false});\n            } else{\n                audio.play();\n                this.setState({audio, playingPreviewUrl:previewUrl})\n            }\n        }\n    }\n\n    trackIcon = track =>{\n        if(!track.preview_url){\n            return <span>N/A</span>\n        }\n        if(this.state.playing && this.state.playingPreviewUrl === track.preview_url){\n            return<span>| |</span>\n        }\n        return <span>&#9654;</span>\n    }\n    render(){\n        const {tracks} = this.props;\n\n        return(\n            <div>\n                {\n                    tracks.map(track => {\n                        const { id, name, album, preview_url } = track;\n\n                        return(\n                            <div \n                                key={id} \n                                onClick={this.playAudio(preview_url)}\n                                className=\"track\"\n                                >\n                                <img \n                                    src={album.images[0].url} \n                                    alt= \"track-img\" \n                                    className=\"track-img\"\n                                />\n                                <p className=\"track-name\">{name}</p>\n                                <p className=\"track-icon\">{this.trackIcon(track)}</p>\n\n                            </div>\n                        )\n\n                    })\n                }\n            </div>\n        )\n    }\n}\n\nexport default Tracks;","import React, {Component} from 'react';\n\n\nclass Search extends Component{\n\n    state = { artistQuery: ''}\n\n    updateArtistQuery = (event) => {\n        this.setState({artistQuery : event.target.value});\n      }\n    \n      handelKeyPress = event => {\n        if (event.key === 'Enter'){\n          this.searchArtist();\n        }\n      }\n\n      searchArtist = () =>{\n          this.props.searchArtist(this.state.artistQuery);\n      }\n    render(){\n        return (\n            <div>\n               <input \n                onChange={this.updateArtistQuery}\n                onKeyPress={this.handelKeyPress}\n                placeholder= 'Search for an artist' \n               />\n              <button onClick={this.searchArtist} >Search</button>\n            </div>\n        )\n    }\n}\n\nexport default Search;","import React, { Component } from 'react';\nimport Artist from './Artist';\nimport Tracks from './Tracks';\nimport Search from './Search';\n\nconst API_ADDRESS = 'https://spotify-api-wrapper.appspot.com';\n\nclass App extends Component {\n  state ={  artist:'' , tracks: [] };\n\n  componentDidMount(){\n    this.searchArtist('arijit');\n  }\n\n  searchArtist = artistQuery => {\n    fetch(`${API_ADDRESS}/artist/${artistQuery}`)\n    .then(response => response.json())\n    .then(json => {\n      if (json.artists.total > 0){\n        const artist = json.artists.items[0];\n        this.setState({artist});\n\n        fetch(`${API_ADDRESS}/artist/${artist.id}/top-tracks`)\n          .then(response => response.json())\n          .then(json => this.setState({tracks: json.tracks}))\n          .catch(error => alert(error.message));\n      }\n    })\n    .catch(error => alert(error.message))\n  }\n\n    render(){\n      console.log('this.state', this.state);\n        return(\n            <div>\n              <h2>Music Master</h2>\n              <Search searchArtist = {this.searchArtist} />\n              <Artist artist={this.state.artist}/>\n              <Tracks tracks={this.state.tracks} />\n            </div>\n        )\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n"],"sourceRoot":""}